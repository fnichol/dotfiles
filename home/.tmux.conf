# Big thanks to:
# * http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/#comment-1234
# * http://robots.thoughtbot.com/post/2641409235/a-tmux-crash-course
# * http://github.com/brandur/tmux-extra
# * https://github.com/hashrocket/dotmatrix/blob/master/.tmux.conf
# * http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
# * http://pragprog.com/book/bhtmux/tmux
# * https://wiki.archlinux.org/index.php/tmux

# prefix is default C-b and C-z
if-shell 'test "$(tmux -V)" = "tmux 1.5"' 'set -g prefix C-b,C-z'
if-shell 'test "$(uname -s)" = "OpenBSD" || test "$(tmux -V)" \> "tmux 1.6"' 'set -g prefix2 C-z'

# hitting 'C-z C-z' will run Ctrl+Z (SIGTSTP, suspend as usual)
bind C-z send-keys C-z

# force a reload of the config file
bind R source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Use a 1-based index for windows for better access on most keyboards
set -g base-index 1
# Use a 1-based index for panes
set -g pane-base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green]#{session_name}#{?#{!=:#{client_key_table},root}, #[fg=white bold bg=red][#{client_key_table}]#[default],} '
set -g status-left-length 25
set -g message-style fg=colour234,bg=green,bright

# Highlight active window
set-window-option -g window-status-style fg=cyan,bg=default,dim
set-window-option -g window-status-current-style fg=black,bg=white,bright

# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

# use the motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use "Alt-<motion key>" to move between panes without needing to use the
# prefix
bind -n M-H select-pane -L
bind -n M-J select-pane -D
bind -n M-K select-pane -U
bind -n M-L select-pane -R

# # Simulate an i3/vim "resize mode", implemented with a tmux custom key-table.
# # Once in the resize mode, the motion keys will resize the current pane. The
# # capital letter versions will resize at double the size for larger resizing
unbind r
bind r switch-client -T ResizeMode
# [ResizeMode] Resize the current pane using motion keys in small increments
bind -T ResizeMode h resize-pane -L 5 \; switch-client -T ResizeMode
bind -T ResizeMode j resize-pane -D 5 \; switch-client -T ResizeMode
bind -T ResizeMode k resize-pane -U 5 \; switch-client -T ResizeMode
bind -T ResizeMode l resize-pane -R 5 \; switch-client -T ResizeMode
# [ResizeMode] Resize the current pane using motion keys in larger increments
bind -T ResizeMode H resize-pane -L 10 \; switch-client -T ResizeMode
bind -T ResizeMode J resize-pane -D 10 \; switch-client -T ResizeMode
bind -T ResizeMode K resize-pane -U 10 \; switch-client -T ResizeMode
bind -T ResizeMode L resize-pane -R 10 \; switch-client -T ResizeMode
# [ResizeMode] Resize the current pane to a percentage of the horizontal window
# size (cols)
bind -T ResizeMode 1 resize-pane -x 10% \; switch-client -T ResizeMode
bind -T ResizeMode 2 resize-pane -x 25% \; switch-client -T ResizeMode
bind -T ResizeMode 3 resize-pane -x 33% \; switch-client -T ResizeMode
bind -T ResizeMode 4 resize-pane -x 40% \; switch-client -T ResizeMode
bind -T ResizeMode 5 resize-pane -x 50% \; switch-client -T ResizeMode
bind -T ResizeMode 6 resize-pane -x 66% \; switch-client -T ResizeMode
bind -T ResizeMode 7 resize-pane -x 75% \; switch-client -T ResizeMode
bind -T ResizeMode 8 resize-pane -x 80% \; switch-client -T ResizeMode
bind -T ResizeMode 9 resize-pane -x 90% \; switch-client -T ResizeMode
bind -T ResizeMode 0 resize-pane -x 10% \; switch-client -T ResizeMode
# [ResizeMode] Move between panes with M-<motion key>
bind -T ResizeMode M-H select-pane -L \; switch-client -T ResizeMode
bind -T ResizeMode M-J select-pane -D \; switch-client -T ResizeMode
bind -T ResizeMode M-K select-pane -U \; switch-client -T ResizeMode
bind -T ResizeMode M-L select-pane -R \; switch-client -T ResizeMode
# [ResizeMode] Swap twp panes
bind -T ResizeMode < swap-pane -U \; switch-client -T ResizeMode
bind -T ResizeMode > swap-pane -D \; switch-client -T ResizeMode

# Enable mouse support for resizing, selecting panes, copying, etc.
set -g mouse on

# Set the term to support 256 colors. If tmux >= 2.1, then this is set to
# `tmux-256color` and otherwise `screen-256color`
if-shell 'test "$(tmux -V)" \> "tmux 2.0"' \
  'set -g default-terminal "tmux-256color"' \
  'set -g default-terminal "screen-256color"'
if-shell 'test "$(uname -s)" = "Darwin"' \
  'set -g default-terminal "screen-256color"'
if-shell 'test "$(uname -s)" = "FreeBSD"' \
  'set -g default-terminal "screen-256color"'

if-shell 'test "$COLORTERM" = "truecolor"' \
  'set-option -ga terminal-overrides ",xterm-256color:Tc"'

# please to have longer history scrollback
set -g history-limit 4096

# Use vi mode for buffer navigation
set-window-option -g mode-keys vi

# toggle logging current pane to a log file
bind P pipe-pane -o "cat >>~/tmux.#W.log" \; display "Toggled logging to ~/tmux.#W.log"
